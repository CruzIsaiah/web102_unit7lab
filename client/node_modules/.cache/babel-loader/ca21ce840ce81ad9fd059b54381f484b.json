{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\howdi\\\\OneDrive\\\\Desktop\\\\scho0l2023\\\\github\\\\web102_unit7lab\\\\client\\\\src\\\\pages\\\\CreatePost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { supabase } from \"../client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreatePost = () => {\n  _s();\n\n  const [post, setPost] = useState({\n    title: \"\",\n    author: \"\",\n    description: \"\",\n    characterImage: \"\",\n    intelligence: 0,\n    perception: 0,\n    agility: 0,\n    charisma: 0,\n    endurance: 0,\n    luck: 0,\n    strength: 0,\n    fastShot: 0,\n    heavyHanded: 0\n  });\n  const totalPoints = 10; // Total points available to distribute\n\n  const attributes = [\"intelligence\", \"perception\", \"agility\", \"charisma\", \"endurance\", \"luck\", \"strength\", \"fastShot\", \"heavyHanded\"];\n\n  const createPost = async event => {\n    event.preventDefault();\n\n    try {\n      await supabase.from(\"Posts\").insert(post).select();\n      window.location = \"/\";\n    } catch (error) {\n      console.error(\"Error creating post:\", error.message); // Handle error, e.g., display error message to the user\n    }\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setPost(prev => ({ ...prev,\n      [name]: parseInt(value)\n    }));\n  };\n\n  const handleAttributeChange = (attribute, value) => {\n    const remainingPoints = totalPoints - Object.values(post).reduce((acc, val) => acc + val, 0) + post[attribute];\n\n    if (value <= remainingPoints) {\n      setPost(prev => ({ ...prev,\n        [attribute]: value\n      }));\n    } else {\n      alert(`You only have ${remainingPoints} points left.`);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"title\",\n        children: \"Character Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 55\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"title\",\n        name: \"title\",\n        value: post.title,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"author\",\n        children: \"Creator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"author\",\n        name: \"author\",\n        value: post.author,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"description\",\n        children: \"Character Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        rows: \"5\",\n        cols: \"50\",\n        id: \"description\",\n        name: \"description\",\n        value: post.description,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Allocate Points (Total: \", totalPoints, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), attributes.map((attr, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: attr,\n          children: attr\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: attr,\n          name: attr,\n          value: post[attr],\n          min: \"0\",\n          max: totalPoints,\n          onChange: e => handleAttributeChange(attr, parseInt(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Submit\",\n        onClick: createPost\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CreatePost, \"qV2EzyIz18imEkm8rNAs7x7H0N0=\");\n\n_c = CreatePost;\nexport default CreatePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"names":["React","useState","supabase","CreatePost","post","setPost","title","author","description","characterImage","intelligence","perception","agility","charisma","endurance","luck","strength","fastShot","heavyHanded","totalPoints","attributes","createPost","event","preventDefault","from","insert","select","window","location","error","console","message","handleChange","name","value","target","prev","parseInt","handleAttributeChange","attribute","remainingPoints","Object","values","reduce","acc","val","alert","map","attr","index","e"],"sources":["C:/Users/howdi/OneDrive/Desktop/scho0l2023/github/web102_unit7lab/client/src/pages/CreatePost.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { supabase } from \"../client\";\n\nconst CreatePost = () => {\n  const [post, setPost] = useState({\n    title: \"\",\n    author: \"\",\n    description: \"\",\n    characterImage: \"\",\n    intelligence: 0,\n    perception: 0,\n    agility: 0,\n    charisma: 0,\n    endurance: 0,\n    luck: 0,\n    strength: 0,\n    fastShot: 0,\n    heavyHanded: 0,\n  });\n  const totalPoints = 10; // Total points available to distribute\n  const attributes = [\n    \"intelligence\",\n    \"perception\",\n    \"agility\",\n    \"charisma\",\n    \"endurance\",\n    \"luck\",\n    \"strength\",\n    \"fastShot\",\n    \"heavyHanded\",\n  ];\n\n  const createPost = async (event) => {\n    event.preventDefault();\n\n    try {\n      await supabase.from(\"Posts\").insert(post).select();\n\n      window.location = \"/\";\n    } catch (error) {\n      console.error(\"Error creating post:\", error.message);\n      // Handle error, e.g., display error message to the user\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setPost((prev) => ({\n      ...prev,\n      [name]: parseInt(value),\n    }));\n  };\n\n  const handleAttributeChange = (attribute, value) => {\n    const remainingPoints =\n      totalPoints -\n      Object.values(post).reduce((acc, val) => acc + val, 0) +\n      post[attribute];\n    if (value <= remainingPoints) {\n      setPost((prev) => ({\n        ...prev,\n        [attribute]: value,\n      }));\n    } else {\n      alert(`You only have ${remainingPoints} points left.`);\n    }\n  };\n\n  return (\n    <div>\n      <form>\n        <label htmlFor=\"title\">Character Name</label> <br />\n        <input\n          type=\"text\"\n          id=\"title\"\n          name=\"title\"\n          value={post.title}\n          onChange={handleChange}\n        />\n        <br />\n        <br />\n        <label htmlFor=\"author\">Creator</label>\n        <br />\n        <input\n          type=\"text\"\n          id=\"author\"\n          name=\"author\"\n          value={post.author}\n          onChange={handleChange}\n        />\n        <br />\n        <br />\n        <label htmlFor=\"description\">Character Description</label>\n        <br />\n        <textarea\n          rows=\"5\"\n          cols=\"50\"\n          id=\"description\"\n          name=\"description\"\n          value={post.description}\n          onChange={handleChange}\n        ></textarea>\n        <br />\n        <br />\n        <label>Allocate Points (Total: {totalPoints})</label>\n        <br />\n        {attributes.map((attr, index) => (\n          <div key={index}>\n            <label htmlFor={attr}>{attr}</label>\n            <input\n              type=\"number\"\n              id={attr}\n              name={attr}\n              value={post[attr]}\n              min=\"0\"\n              max={totalPoints}\n              onChange={(e) =>\n                handleAttributeChange(attr, parseInt(e.target.value))\n              }\n            />\n          </div>\n        ))}\n        <br />\n        <input type=\"submit\" value=\"Submit\" onClick={createPost} />\n      </form>\n    </div>\n  );\n};\n\nexport default CreatePost;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}